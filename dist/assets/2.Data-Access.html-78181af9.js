import{_ as t,W as e,X as d,a0 as l,Y as a,a1 as o}from"./framework-b5ea9e64.js";const c={},i=a("p",null,"事务、DAO支持、JDBC、R2DBC、O/R映射、XML装载。",-1),r=o('<h1 id="_1-事务管理" tabindex="-1"><a class="header-anchor" href="#_1-事务管理" aria-hidden="true">#</a> 1.事务管理</h1><h2 id="基于注解的事务" tabindex="-1"><a class="header-anchor" href="#基于注解的事务" aria-hidden="true">#</a> 基于注解的事务</h2><h3 id="transactional" tabindex="-1"><a class="header-anchor" href="#transactional" aria-hidden="true">#</a> @Transactional</h3><p>默认设置：</p><ul><li>propagation （传播）设置为 <code>PROPAGATION_REQUIRED（propagation_required）</code>。</li><li>隔离级别是 <code>ISOLATION_DEFAULT(Isolation_default)</code>。</li><li>事务是读写的。</li><li>事务超时默认为底层事务系统的默认超时，如果不支持超时，则默认为无。</li><li>任何 <code>RuntimeException</code> 或 <code>Error</code> 都会触发回滚，而任何被检查的 <code>Exception</code> 则不会。</li></ul><p>该注解的其他属性</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">可选的 qualifier，指定要使用的事务管理器。</td></tr><tr><td style="text-align:left;"><code>transactionManager</code></td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;"><code>value</code> 别名。</td></tr><tr><td style="text-align:left;"><code>label</code></td><td style="text-align:left;"><code>String</code> 标签数组，用于为事务添加表达式描述。</td><td style="text-align:left;">标签可以由事务管理器评估，以便将特定于实现的行为与实际事务联系起来。</td></tr><tr><td style="text-align:left;"><code>propagation</code></td><td style="text-align:left;"><code>enum</code>: <code>Propagation</code></td><td style="text-align:left;">可选的 propagation （传播）设置。</td></tr><tr><td style="text-align:left;"><code>isolation</code></td><td style="text-align:left;"><code>enum</code>: <code>Isolation</code></td><td style="text-align:left;">可选的隔离级别。仅适用于 <code>REQUIRED</code> 或 <code>REQUIRES_NEW</code> 的传播值。</td></tr><tr><td style="text-align:left;"><code>timeout</code></td><td style="text-align:left;"><code>int</code> (以秒为单位的粒度)</td><td style="text-align:left;">可选的事务超时。仅适用于 <code>REQUIRED</code> 或 <code>REQUIRES_NEW</code> 的传播值。</td></tr><tr><td style="text-align:left;"><code>timeoutString</code></td><td style="text-align:left;"><code>String</code> (以秒为单位的粒度)</td><td style="text-align:left;">用于指定以秒为单位的 <code>timeout</code>，作为 <code>String</code> 值的替代方案，例如，作为占位符。</td></tr><tr><td style="text-align:left;"><code>readOnly</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">读写事务与只读事务。只适用于 <code>REQUIRED</code> 或 <code>REQUIRES_NEW</code> 的值。</td></tr><tr><td style="text-align:left;"><code>rollbackFor</code></td><td style="text-align:left;"><code>Class</code> 对象的数组，必须从 <code>Throwable</code> 派生。</td><td style="text-align:left;">可选的异常类型数组，必须引起回滚。</td></tr><tr><td style="text-align:left;"><code>rollbackForClassName</code></td><td style="text-align:left;">异常名称模式（pattern）的数组。</td><td style="text-align:left;">可选的异常名称模式（patterns ）数组，必须引起回滚。</td></tr><tr><td style="text-align:left;"><code>noRollbackFor</code></td><td style="text-align:left;">必须从 <code>Throwable</code> 派生的 <code>Class</code> 对象的数组。</td><td style="text-align:left;">可选的exception类型数组，不能引起回滚。</td></tr><tr><td style="text-align:left;"><code>noRollbackForClassName</code></td><td style="text-align:left;">异常名称模式（pattern）的数组。</td><td style="text-align:left;">可选的异常名称模式（patterns ）数组，不能引起回滚。</td></tr></tbody></table><h3 id="事务的传播" tabindex="-1"><a class="header-anchor" href="#事务的传播" aria-hidden="true">#</a> 事务的传播</h3><ul><li><code>PROPAGATION_REQUIRED</code></li><li><code>PROPAGATION_REQUIRES_NEW</code></li><li><code>PROPAGATION_NESTED</code></li></ul><h1 id="_2-dao的支持" tabindex="-1"><a class="header-anchor" href="#_2-dao的支持" aria-hidden="true">#</a> 2.DAO的支持</h1><h2 id="_3-jdbc进行数据访问" tabindex="-1"><a class="header-anchor" href="#_3-jdbc进行数据访问" aria-hidden="true">#</a> 3.JDBC进行数据访问</h2><h2 id="_4-r2dbc进行数据访问" tabindex="-1"><a class="header-anchor" href="#_4-r2dbc进行数据访问" aria-hidden="true">#</a> 4.R2DBC进行数据访问</h2><h2 id="_5-orm数据访问" tabindex="-1"><a class="header-anchor" href="#_5-orm数据访问" aria-hidden="true">#</a> 5.ORM数据访问</h2>',13);function n(s,h){return e(),d("div",null,[i,l(" more "),r])}const x=t(c,[["render",n],["__file","2.Data-Access.html.vue"]]);export{x as default};
